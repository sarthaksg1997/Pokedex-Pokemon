{"version":3,"sources":["Pokemon/PokemonCard.js","Pokemon/Pokemon.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","id","image","name","type","style","className","src","alt","Pokemon","useState","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","a","fetch","res","json","data","next","results","map","pokemon","console","log","useEffect","index","sprites","other","dream_world","front_default","types","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAkBeA,EAhBK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAChCC,EAAK,eAAWD,GACtB,OACE,mCACE,sBAAKE,UAAWD,EAAhB,UACE,qBAAKC,UAAU,KAAf,SACE,sCAASL,OAEX,qBAAKM,IAAKL,EAAOM,IAAKL,EAAMG,UAAU,QACtC,oBAAIA,UAAU,OAAd,SAAsBH,IACtB,wBAAOG,UAAU,OAAjB,oBAAgCF,WC0CzBK,EAnDC,WACd,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,8CAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,uCAAG,8BAAAC,EAAA,sEACHC,MAAMJ,GADH,cACfK,EADe,gBAEFA,EAAIC,OAFF,OAEfC,EAFe,OAKrBN,EAAYM,EAAKC,MAEjBD,EAAKE,QAAQC,IAAb,uCAAiB,WAAOC,GAAP,iBAAAR,EAAA,sEACGC,MAAM,qCAAD,OACgBO,EAAQrB,OAFhC,cACTe,EADS,gBAIIA,EAAIC,OAJR,OAITC,EAJS,OAKfK,QAAQC,IAAIN,GACZR,GAAe,SAACD,GAAD,4BAAqBA,GAArB,CAAkCS,OANlC,2CAAjB,uDAPqB,2CAAH,qDAsBpB,OAJAO,qBAAU,WACRZ,MACC,IAGD,mCACE,sBAAKT,UAAU,OAAf,UACE,oBAAIA,UAAU,UAAd,qBACA,qBAAKA,UAAU,YAAf,SACGK,EAAYY,KAAI,SAACC,EAASI,GACzB,OACE,cAAC,EAAD,CAEE3B,GAAIuB,EAAQvB,GACZC,MAAOsB,EAAQK,QAAQC,MAAMC,YAAYC,cACzC7B,KAAMqB,EAAQrB,KACdC,KAAMoB,EAAQS,MAAM,GAAG7B,KAAKD,MAJvBqB,EAAQrB,WASrB,wBAAQG,UAAU,OAAO4B,QAASnB,EAAlC,6BClCOoB,EARH,WACV,OACE,mCACC,cAAC,EAAD,OCKUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae0f070a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PokemonCard = ({ id, image, name, type }) => {\r\n  const style = `card ${type}`;\r\n  return (\r\n    <> \r\n      <div className={style}>\r\n        <div className=\"id\">\r\n          <small>#{id}</small>\r\n        </div>\r\n        <img src={image} alt={name} className=\"img\" />\r\n        <h3 className=\"info\">{name}</h3>\r\n        <small className=\"info\">Type : {type}</small>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PokemonCard from \"./PokemonCard\";\r\n\r\nconst Pokemon = () => {\r\n  const [allPokemons, setAllPokemons] = useState([]);\r\n  const [loadMore, setLoadMore] = useState(\"https://pokeapi.co/api/v2/pokemon?limit=20\");\r\n\r\n  const getAllPokemons = async () => {\r\n    const res = await fetch(loadMore);\r\n    const data = await res.json();\r\n    //  console.log(data);\r\n\r\n    setLoadMore(data.next);\r\n\r\n    data.results.map(async (pokemon) => {\r\n      const res = await fetch(\r\n        `https://pokeapi.co/api/v2/pokemon/${pokemon.name}`\r\n      );\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setAllPokemons((allPokemons) => [...allPokemons, data]);\r\n    });\r\n    // console.log(allPokemons);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllPokemons();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"body\">\r\n        <h1 className=\"pokedex\">POKEDEX</h1>\r\n        <div className=\"container\">\r\n          {allPokemons.map((pokemon, index) => {\r\n            return (\r\n              <PokemonCard\r\n                key={pokemon.name}\r\n                id={pokemon.id}\r\n                image={pokemon.sprites.other.dream_world.front_default}\r\n                name={pokemon.name}\r\n                type={pokemon.types[0].type.name}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <button className=\"btn \" onClick={getAllPokemons}>\r\n          Load More\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from 'react'\nimport './App.css';\nimport Pokemon from \"./Pokemon/Pokemon\";\n\nconst App = () => {\n  return (\n    <>\n     <Pokemon></Pokemon> \n    </>\n  )\n}\n\nexport default App\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}